import wio.io;

## recursive test
func factorial(var v)
{
	if(v <= 2)
		return v;
	return v * factorial(v - 1);
}

## ref keyword test
{
	dict kvp
	{
		1 : 2,
		"x" : 4,
		'c': 6.21
	};

	dict ref_dict = ref kvp;

	ref_dict['c'] = "Hello, world!";

	Println(kvp['c']);
} 

## ? operator
{
	dict z = {};
	var y = 23;
	if(?z)
	{
		Println("Not reached!");
	}
	if(?y)
	{
		Println("Reached");
	}
}

## nested array - dict
{
	array arr = [[1, [156, 12, 'c'], { 1: ["test", 'y'], 'x': 6.2 }], 3];
	Println(arr);
}

## member test
{
	array arr = [2, [1,2,3], "String", 'C'];
	arr.Push("Test");

	var front = arr.Front();
	front = "Merhaba";

	Println(arr);
	Println(arr.At(1).Length());
}

## ref parameter test
{
	var v = 10;

	func foo(var ref y)
	{
		Println(y);
		y = 5;
	}
	foo(v);
	Println(v);
}

## Types
{
	import wio.types as Types;
	Println(Types.NULL);
	Println(Types.INTEGER);
	Println(Types.FLOAT);
	Println(Types.STRING);
	Println(Types.CHARACTER);
	Println(Types.BOOLEAN);
	Println(Types.TYPE);
	Println(Types.PAIR);
	Println(Types.FILE);
	Println(Types.ARRAY);
	Println(Types.DICTIONARY);
	Println(Types.FUNCTION);
	Println(Types.VEC2);
	Println(Types.VEC3);
	Println(Types.VEC4);
	Println(Types.COMPARATOR);
}